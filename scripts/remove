#!/bin/bash

source .fonctions	# Charge les fonctions génériques habituellement utilisées dans le script

# Récupère les infos de l'application.
app=$YNH_APP_INSTANCE_NAME

# Source app helpers
source /usr/share/yunohost/helpers

domain=$(ynh_app_setting_get $app domain)
port=$(ynh_app_setting_get $app port)


# Arrêt du service
if [ -e "/etc/init.d/NAME_APP" ]; then
	echo "Delete init.d script"
	sudo service NAME_APP stop
	sudo rm "/etc/init.d/NAME_APP"
	sudo rm "/etc/default/NAME_APP"
	sudo update-rc.d -f NAME_APP remove
fi

# Retire le service du monitoring de Yunohost.
if sudo yunohost service status | grep -q NAME_APP	# Test l'existence du service dans Yunohost
then
	echo "Remove NAME_APP service"
	sudo yunohost service remove NAME_APP
fi

REMOVE_BDD $app	# Suppression de la base de donnée et de l'utilisateur associé.

SECURE_REMOVE '/var/www/$app'	# Suppression du dossier de l'application

REMOVE_NGINX_CONF	# Suppression de la configuration nginx

REMOVE_FPM_CONF	# Suppression de la configuration du pool php-fpm

REMOVE_LOGROTATE_CONF	# Suppression de la configuration de logrotate

if sudo yunohost firewall list | grep -q "\- $port$"
then
	echo "Close port $port"
	sudo yunohost firewall disallow TCP $port > /dev/null
fi

# Retirer le cron
if [ -e "/etc/cron.d/$app" ]; then
	echo "Delete cron"
	sudo rm "/etc/cron.d/$app"
fi

# Suppression d'un dossier
SECURE_REMOVE '/etc/$app/'

# Suppression des log
SECURE_REMOVE '/var/log/$app/'

# Supprime l'utilisateur
if ynh_system_user_exists "USER"	# Test l'existence de l'utilisateur
then
	sudo userdel USER
fi

# Régénère la configuration de SSOwat
sudo yunohost app ssowatconf

echo -e "\e[0m"	# Restore normal color
